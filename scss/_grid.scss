@import "__variable.scss";
//Максимальное количество столбцов в сетке
$grid-col: 12;

.grid {
    display: grid;
    grid-gap: $padding-general;
    margin-bottom: $padding-general;
}

.hidden {
    display: none;
}

/*.grid-inline {
    display: grid;
    grid-gap: $padding-general;
    padding: $padding-general;
    overflow: auto;
    grid-auto-flow: column;
}*/

.grid-small-gap {
    grid-gap: $padding-general - 10;
}

.grid-big-gap {
    grid-gap: $padding-general + 10;
}

.grid-gap-0 {
    grid-gap: 0;
}

/*default. No responsive*/
.g-1 {
    grid-template-columns: 1fr;
}

.col-span-1 {
    grid-column: span 1;
}

.row-span-1 {
    grid-row: span 1;
}

@for $i from 2 through $grid-col {
    .g-#{$i} {
        grid-template-columns: repeat($i, 1fr);
    }

    .col-span-#{$i} {
        grid-column: span $i;
    }

    .row-span-#{$i} {
        grid-row: span $i;
    }
}

//Единица итерации медиа-запроса
@mixin iteration-media($bpname) {
    @for $i from 1 through $grid-col {
        .g-#{$bpname}-#{$i} {
            grid-template-columns: repeat($i, 1fr);
        }

        .col-#{$bpname}-span-#{$i} {
            grid-column: span $i;
        }

        .row-#{$bpname}-span-#{$i} {
            grid-row: span $i;
        }
    }
}

//Основная сетка 
@each $bpname, $value in $breakpoints {
    @if $bpname == xsm {
        @media (max-width:$bp-sm - 1) {
            @include iteration-media($bpname)
        }
    }
    @else {
        @media (min-width: $value) {
            @include iteration-media($bpname)
        }
    }
}

//Сокрытие элементов
@each $bpname, $value in $breakpoints {
        @media (max-width: $value) {
            .hidden-#{$bpname} {
                display: none;
            }
    }
}